#!/bin/bash

# HOW TO DO MCP Server - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ GitHub —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π Cursor IDE

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
VERSION="2.0.0"
REPO_URL="https://github.com/your-username/how_to_do"
PROJECT_NAME="how_to_do"
TEMP_DIR="/tmp/how_to_do_install"
CURSOR_CONFIG_DIR="$HOME/.cursor"
MCP_CONFIG="$CURSOR_CONFIG_DIR/mcp.json"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if command -v "$1" &> /dev/null; then
        return 0
    else
        return 1
    fi
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup() {
    if [ -d "$TEMP_DIR" ]; then
        print_status $YELLOW "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        rm -rf "$TEMP_DIR"
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
check_system_dependencies() {
    print_status $BLUE "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    if check_command python3; then
        PYTHON_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
        print_status $GREEN "‚úÖ Python ${PYTHON_VERSION} –Ω–∞–π–¥–µ–Ω"
        PYTHON_CMD="python3"
    elif check_command python; then
        PYTHON_VERSION=$(python -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
        print_status $GREEN "‚úÖ Python ${PYTHON_VERSION} –Ω–∞–π–¥–µ–Ω"
        PYTHON_CMD="python"
    else
        print_status $RED "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω"
        print_status $YELLOW "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º pip
    if check_command pip3; then
        print_status $GREEN "‚úÖ pip3 –Ω–∞–π–¥–µ–Ω"
        PIP_CMD="pip3"
    elif check_command pip; then
        print_status $GREEN "‚úÖ pip –Ω–∞–π–¥–µ–Ω"
        PIP_CMD="pip"
    else
        print_status $RED "‚ùå pip –Ω–µ –Ω–∞–π–¥–µ–Ω"
        print_status $YELLOW "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pip –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º git
    if check_command git; then
        GIT_VERSION=$(git --version | cut -d' ' -f3)
        print_status $GREEN "‚úÖ Git ${GIT_VERSION} –Ω–∞–π–¥–µ–Ω"
    else
        print_status $RED "‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω"
        print_status $YELLOW "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
        exit 1
    fi
}

# –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç –∏–∑ GitHub
download_project() {
    print_status $BLUE "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ GitHub..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    mkdir -p "$TEMP_DIR"
    cd "$TEMP_DIR"
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    print_status $CYAN "üåê –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $REPO_URL"
    git clone "$REPO_URL" .
    
    if [ $? -eq 0 ]; then
        print_status $GREEN "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω"
    else
        print_status $RED "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        exit 1
    fi
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
install_python_dependencies() {
    print_status $BLUE "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip
    print_status $CYAN "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
    $PIP_CMD install --upgrade pip
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    print_status $CYAN "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    $PIP_CMD install -e ".[dev]"
    
    if [ $? -eq 0 ]; then
        print_status $GREEN "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_status $RED "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        exit 1
    fi
}

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Cursor IDE
setup_cursor() {
    print_status $BLUE "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cursor IDE..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    mkdir -p "$CURSOR_CONFIG_DIR"
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MCP
    print_status $CYAN "üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cat > /tmp/mcp_config.json << EOF
{
  "mcpServers": {
    "how_to_do": {
      "transport": "stdio",
      "command": "how-to-do-mcp"
    }
  }
}
EOF
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -f "$MCP_CONFIG" ]; then
        print_status $YELLOW "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP..."
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        cp "$MCP_CONFIG" "$MCP_CONFIG.backup"
        print_status $CYAN "üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $MCP_CONFIG.backup"
        
        # –ü—Ä–æ—Å—Ç–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ - –¥–æ–±–∞–≤–ª—è–µ–º how_to_do –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Å–µ—Ä–≤–µ—Ä–∞–º
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É JSON –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
        cp /tmp/mcp_config.json "$MCP_CONFIG"
    else
        print_status $CYAN "üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP..."
        cp /tmp/mcp_config.json "$MCP_CONFIG"
    fi
    
    print_status $GREEN "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cursor –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
verify_installation() {
    print_status $BLUE "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É
    if command -v how-to-do-mcp &> /dev/null; then
        print_status $GREEN "‚úÖ HOW TO DO MCP Server —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –≤ —Ç–µ–∫—É—â–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
        print_status $CYAN "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è..."
        if python -c "import how_to_do; print('OK')" &> /dev/null; then
            print_status $GREEN "‚úÖ –ú–æ–¥—É–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        else
            print_status $RED "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è"
            return 1
        fi
    else
        print_status $RED "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Cursor
    if [ -f "$MCP_CONFIG" ]; then
        print_status $GREEN "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cursor –Ω–∞–π–¥–µ–Ω–∞"
    else
        print_status $YELLOW "‚ö†Ô∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cursor –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
show_project_info() {
    print_status $PURPLE "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:"
    echo "   –ù–∞–∑–≤–∞–Ω–∏–µ: HOW TO DO MCP Server"
    echo "   –í–µ—Ä—Å–∏—è: $VERSION"
    echo "   –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_URL"
    echo "   –ö–æ–º–∞–Ω–¥–∞: how-to-do-mcp"
    echo "   –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cursor: $MCP_CONFIG"
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
show_next_steps() {
    print_status $PURPLE "üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor IDE"
    echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É: how-to-do-mcp --help"
    echo "   3. –í Cursor –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã HOW TO DO"
    echo "   4. –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: $REPO_URL"
    echo ""
    print_status $CYAN "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   - how-to-do-mcp --help          # –°–ø—Ä–∞–≤–∫–∞"
    echo "   - how-to-do-mcp list            # –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    echo "   - how-to-do-mcp info <command>  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_status $BLUE "üöÄ HOW TO DO MCP Server Installer v${VERSION}"
    echo "=================================================="
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
    show_project_info
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    check_system_dependencies
    echo ""
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    download_project
    echo ""
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    install_python_dependencies
    echo ""
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Cursor
    setup_cursor
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    verify_installation
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print_status $GREEN "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    show_next_steps
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –æ—á–∏—Å—Ç–∫–∞
trap cleanup EXIT
trap 'print_status $RED "‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $LINENO"; exit 1' ERR

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ "$1" = "--help" ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0"
    echo "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ HOW TO DO MCP Server –∏–∑ GitHub"
    echo ""
    echo "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:"
    echo "  1. –°–∫–∞—á–∏–≤–∞–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–∑ GitHub"
    echo "  2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    echo "  3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Cursor IDE"
    echo "  4. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫—É"
    echo "  5. –û—á–∏—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
    exit 0
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º
main "$@" 